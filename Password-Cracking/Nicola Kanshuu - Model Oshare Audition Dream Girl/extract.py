import struct

# requirements: python 3

# get the decompressed code.bin from the latest update file for the game (v1072)
# make sure the file is named code.bin
# run this script in the same directory where you saved the file
# it should print all the passwords to your terminal

DECODE_TABLE: dict[int, str] = {
	0x5082: "1",
	0x5182: "2",
	0x5282: "3",
	0x5382: "4",
	0x5482: "5",
	0x5582: "6",
	0x5682: "7",
	0x5782: "8",
	0x5882: "9",
	0x4F82: "0",
	0x9182: "q",
	0x9782: "w",
	0x8582: "e",
	0x9282: "r",
	0x9482: "t",
	0x9982: "y",
	0x9582: "u",
	0x8982: "i",
	0x8F82: "o",
	0x9082: "p",
	0x8182: "a",
	0x9382: "s",
	0x8482: "d",
	0x8682: "f",
	0x8782: "g",
	0x8882: "h",
	0x8A82: "j",
	0x8B82: "k",
	0x8C82: "l",
	0x9A82: "z",
	0x9882: "x",
	0x8382: "c",
	0x9682: "v",
	0x8282: "b",
	0x8E82: "n",
	0x8D82: "m",
	0x4381: ",",
	0x4481: ".",
	0x7082: "Q",
	0x7682: "W",
	0x6482: "E",
	0x7182: "R",
	0x7382: "T",
	0x7882: "Y",
	0x7482: "U",
	0x6882: "I",
	0x6E82: "O",
	0x6F82: "P",
	0x6082: "A",
	0x7282: "S",
	0x6382: "D",
	0x6582: "F",
	0x6682: "G",
	0x6782: "H",
	0x6982: "J",
	0x6A82: "K",
	0x6B82: "L",
	0x7982: "Z",
	0x7782: "X",
	0x6282: "C",
	0x7582: "V",
	0x6182: "B",
	0x6D82: "N",
	0x6C82: "M",

	0xED82: "„Çè",
	0xE782: "„Çâ",
	0xE282: "„ÇÑ",
	0xDC82: "„Åæ",
	0xCD82: "„ÅØ",
	0xC882: "„Å™",
	0xBD82: "„Åü",
	0xB382: "„Åï",
	0xA982: "„Åã",
	0xA082: "„ÅÇ",
	0xF082: "„Çí",
	0xE882: "„Çä",
	0xE482: "„ÇÜ",
	0xDD82: "„Åø",
	0xD082: "„Å≤",
	0xC982: "„Å´",
	0xBF82: "„Å°",
	0xB582: "„Åó",
	0xAB82: "„Åç",
	0xA282: "„ÅÑ",
	0xF182: "„Çì",
	0xE982: "„Çã",
	0xE682: "„Çà",
	0xDE82: "„ÇÄ",
	0xD382: "„Åµ",
	0xCA82: "„Å¨",
	0xC282: "„Å§",
	0xB782: "„Åô",
	0xAD82: "„Åè",
	0xA482: "„ÅÜ",
	0x4181: "„ÄÅ",
	0xEA82: "„Çå",
	0x4981: "ÔºÅ",
	0xDF82: "„ÇÅ",
	0xD682: "„Å∏",
	0xCB82: "„Å≠",
	0xC482: "„Å¶",
	0xB982: "„Åõ",
	0xAF82: "„Åë",
	0xA682: "„Åà",
	0x4281: "„ÄÇ",
	0xEB82: "„Çç",
	0x4881: "Ôºü",
	0xE082: "„ÇÇ",
	0xD982: "„Åª",
	0xCC82: "„ÅÆ",
	0xC682: "„Å®",
	0xBB82: "„Åù",
	0xB182: "„Åì",
	0xA882: "„Åä",
	0xCE82: "„Å∞",
	0xD182: "„Å≥",
	0xD482: "„Å∂",
	0xD782: "„Åπ",
	0xDA82: "„Åº",
	0xBE82: "„Å†",
	0xC082: "„Å¢",
	0xC382: "„Å•",
	0xC582: "„Åß",
	0xC782: "„Å©",
	0xB482: "„Åñ",
	0xB682: "„Åò",
	0xB882: "„Åö",
	0xBA82: "„Åú",
	0xBC82: "„Åû",
	0xAA82: "„Åå",
	0xAC82: "„Åé",
	0xAE82: "„Åê",
	0xB082: "„Åí",
	0xB282: "„Åî",
	0xCF82: "„Å±",
	0xD282: "„Å¥",
	0xD582: "„Å∑",
	0xD882: "„Å∫",
	0xDB82: "„ÅΩ",

	0x8F83: "„ÉØ",
	0x8983: "„É©",
	0x8483: "„É§",
	0x7D83: "„Éû",
	0x6E83: "„Éè",
	0x6983: "„Éä",
	0x5E83: "„Çø",
	0x5483: "„Çµ",
	0x4A83: "„Ç´",
	0x4183: "„Ç¢",
	0x9283: "„É≤",
	0x8A83: "„É™",
	0x8683: "„É¶",
	0x7E83: "„Éü",
	0x7183: "„Éí",
	0x6A83: "„Éã",
	0x6083: "„ÉÅ",
	0x5683: "„Ç∑",
	0x4C83: "„Ç≠",
	0x4383: "„Ç§",
	0x9383: "„ÇΩ",
	0x8B83: "„É´",
	0x8883: "„É®",
	0x8083: "„É†",
	0x7483: "„Éï",
	0x6B83: "„Éå",
	0x6383: "„ÉÑ",
	0x5883: "„Çπ",
	0x4E83: "„ÇØ",
	0x4583: "„Ç¶",
	0x8C83: "„É¨",
	0x8183: "„É°",
	0x7783: "„Éò",
	0x6C83: "„Éç",
	0x6583: "„ÉÜ",
	0x5A83: "„Çª",
	0x5083: "„Ç±",
	0x4783: "„Ç®",
	0x8D83: "„É≠",
	0x8283: "„É¢",
	0x7A83: "„Éõ",
	0x6D83: "„Éé",
	0x6783: "„Éà",
	0x5C83: "„ÇΩ",
	0x5283: "„Ç≥",
	0x4983: "„Ç™",
	0x6F83: "„Éê",
	0x7283: "„Éì",
	0x7583: "„Éñ",
	0x7883: "„Éô",
	0x7B83: "„Éú",
	0x5F83: "„ÉÄ",
	0x6183: "„ÉÇ",
	0x6483: "„ÉÖ",
	0x6683: "„Éá",
	0x6883: "„Éâ",
	0x5583: "„Ç∂",
	0x5783: "„Ç∏",
	0x5983: "„Ç∫",
	0x5B83: "„Çº",
	0x5D83: "„Çæ",
	0x4B83: "„Ç¨",
	0x4D83: "„ÇÆ",
	0x4F83: "„Ç∞",
	0x5183: "„Ç≤",
	0x5383: "„Ç¥",
	0x7083: "„Éë",
	0x7383: "„Éî",
	0x7683: "„Éó",
	0x7983: "„Éö",
	0x7C83: "„Éù",

	0x9981: "‚òÜ",
	0x9A81: "‚òÖ",
	0x9B81: "‚óã",
	0x9C81: "‚óè",
	0x9D81: "‚≠ó",
	0x9E81: "‚óá",
	0x9F81: "‚óÜ",
	0xA181: "‚ñ†",
	0xA281: "‚ñ≥",
	0xA481: "‚ñΩ",
	0xA081: "‚ô°",
	0xA581: "‚ô•",
	0xAA81: "‚áà",
	0xAB81: "‚áä",
	0x9581: "ÔºÜ",
	0xF481: "ùÖ†",
	0xF681: "‚Åâ",
	0x6181: "!!",
	0x4981: "!",
	0x4881: "?",
	0x4F81: "^",
	0x5E81: "‚ï±",
	0x5F81: "‚ï≤",
	0x5B81: "-",
	0x6081: "~",
	0x6981: "(",
	0x6A81: ")",

	0x0000: " "
}

CODEBIN_BASE = 0x100000
PASSWORDARR_BASE = 0x2AD680 - CODEBIN_BASE
PASSWORDENTRY_SIZE = 0xC
PASSWORD_COUNT = 71


with open("code.bin", "rb") as f:
	f.seek(PASSWORDARR_BASE)
	for i in range(0, PASSWORDENTRY_SIZE * PASSWORD_COUNT, PASSWORDENTRY_SIZE):
		entry = struct.unpack("III", f.read(PASSWORDENTRY_SIZE))
		prev = f.tell()
		f.seek(entry[1] - CODEBIN_BASE)
		pw_raw = struct.unpack("HHHHHH", f.read(12))
		print(''.join([ DECODE_TABLE[x] for x in pw_raw ]), end="\n\n")
		f.seek(prev)